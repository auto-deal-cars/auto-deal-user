service: auto-deal-user
frameworkVersion: '3'

useDotenv: true

custom:
  audienceIssuerUrl: ${file(env.json):AUDIENCE_ISSUER_URL}
  audienceClientId: ${file(env.json):AUDIENCE_CLIENT_ID}
  cognitoArn: ${file(env.json):COGNITO_ARN}
  cognitoUserPoolId: ${file(env.json):COGNITO_USER_POOL_ID}
  authFlow: ${file(env.json):AUTH_FLOW}
  adminGroupName: ${file(env.json):ADMIN_GROUP_NAME}
  buyerGroupName: ${file(env.json):BUYER_GROUP_NAME}
  adminPermissions: ${file(env.json):ADMIN_PERMISSIONS}
  buyerPermissions: ${file(env.json):BUYER_PERMISSIONS}

provider:
  name: aws
  ecr:
    images:
      user:
        path: ./
        platform: linux/arm64
  stage: dev
  region: us-east-1
  runtime: python3.10
  timeout: 30
  deploymentMethod: direct
  environment:
    ADMIN_PERMISSIONS: ${self:custom.adminPermissions}
    BUYER_PERMISSIONS: ${self:custom.buyerPermissions}
    COGNITO_ARN: ${self:custom.cognitoArn}
    AUDIENCE_ISSUER_URL: ${self:custom.audienceIssuerUrl}
    AUDIENCE_CLIENT_ID: ${self:custom.audienceClientId}
    COGNITO_USER_POOL_ID: ${self:custom.cognitoUserPoolId}
    AUTH_FLOW: ${self:custom.authFlow}
    ADMIN_GROUP_NAME: ${self:custom.adminGroupName}
    BUYER_GROUP_NAME: ${self:custom.buyerGroupName}
  httpApi:
    cors: true
    # authorizers:
    #   autoDealAuthorizer:
    #     type: jwt
    #     identitySource: $request.header.Authorization
    #     issuerUrl: ${self:custom.audienceIssuerUrl}
    #     audience:
    #       - ${self:custom.audienceClientId}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - cognito-idp:AdminCreateUser
            - cognito-idp:AdminGetUser
            - cognito-idp:AdminInitiateAuth
            - cognito-idp:AdminSetUserPassword
            - cognito-idp:AdminDeleteUser
            - cognito-idp:AdminAddUserToGroup
          Resource: ${self:custom.cognitoArn}
  architecture: arm64

functions:
  preTokenGeneration:
    image:
      name: user
      command: ["user.adapters.controllers.pre_token_generator_controller.lambda_handler"]
    events:
      - cognitoUserPool:
          pool: auto-deal-api
          trigger: PreTokenGeneration
          existing: true
  create_user:
    image:
      name: user
    events:
      - httpApi:
          path: /user
          method: post
  login_user:
    image:
      name: user
      command: ["user.adapters.controllers.login_user_controller.login_user"]
    events:
      - httpApi:
          path: /login
          method: post
  delete_user:
    image:
      name: user
      command: ["user.adapters.controllers.delete_user_controller.delete_user"]
    events:
      - httpApi:
          path: /user
          method: delete
          # authorizer:
          #   name: autoDealAuthorizer
          #   scopes: ["delete:user"]

resources:
  # Cognito
  - ${file(resources/cognito-user-pool.yml)}
