name: Deploy

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --no-cache-dir -r requirements.txt
        pip install pytest

    - name: Run tests
      run: |
        pytest

    - name: Create env.json file
      run: |
        echo '{
          "AUDIENCE_ISSUER_URL": "${{ secrets.AUDIENCE_ISSUER_URL }}",
          "AUDIENCE_CLIENT_ID": "${{ secrets.AUDIENCE_CLIENT_ID }}",
          "COGNITO_ARN": "${{ secrets.COGNITO_ARN }}",
          "COGNITO_USER_POOL_ID": "${{ secrets.COGNITO_USER_POOL_ID }}",
          "AUTH_FLOW": "${{ secrets.AUTH_FLOW }}",
          "ADMIN_GROUP_NAME": "${{ secrets.ADMIN_GROUP_NAME }}",
          "BUYER_GROUP_NAME": "${{ secrets.BUYER_GROUP_NAME }}",
          "ADMIN_PERMISSIONS": "${{ secrets.ADMIN_PERMISSIONS }}",
          "BUYER_PERMISSIONS": "${{ secrets.BUYER_PERMISSIONS }}"
        }' > env.json

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    
    - name: Install serverless dependencies
      id: install-serverless
      run: |
        npm install -g serverless@3.38.0
        npm install -g serverless-dotenv-plugin
        npm install dotenv

    - name: Deploy if tests pass
      if: success()
      run: |
        sls deploy
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: us-east-1

    - name: Clean up env.json file
      if: success()
      run: rm env.json
